<title></title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<!-- <link href="/css/style.css" rel="stylesheet"> -->

<!-- Bootstrap core CSS -->
<link href="/css/bootstrap.css" rel="stylesheet">

<!-- Custom styles for this template -->
<link href="/css/scrolling-nav.css" rel="stylesheet">


<!-- bootstrap stylesheet
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
    integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous"> -->

<!-- bootstrap js -->
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
    integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous">
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
    integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous">
</script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
    integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous">
</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js">
</script>


<script>
    function serializeObject($form) {
        var unindexed_array = $form.serializeArray();
        var indexed_array = {};

        $.map(unindexed_array, function (n, i) {
            indexed_array[n['name']] = n['value'];
        });

        return indexed_array;
    }
</script>
<!-- 
<script>
    function searchByCarNum() {
        let search_carNumber = $('#search_carNumber').val();
        // 변수앞에 $를 붙이는 것은 이 변수가 jQuery 변수라는 것을 알려주는 것(관습상)
        let $target = $('#list');
        $.ajax({
            type: 'POST',
            url: '/car/api/search',
            dataType: 'json',
            // search_carNumber 데이터를 json 형식으로 /api/search에 보낸다.
            data: {
                "search_carNumber": search_carNumber
            },
            success: function (item) {
                console.log('success');
                console.log(item); // 성공 하였으면 데이터가 item에 들어오는지 확인한다.

                // item 데이터가 잘 들어오면 $target에 추가하기
                // $target값을 모두 날린다.
                $target.empty();

                // 새로 붙여 넣는다.
                $target.append(`
                <tr>
                    <td>1</td>
                    <td>${item.carNumber}</td>
                    <td>${item.owner}</td>
                    <td>${item.model}</td>
                    <td>${item.company}</td>
                    <td>${item.numOfAccident}</td>
                    <td>${item.numOfOwnerChange}</td>
                    <td><span class="delCar">x</span></td>
                </tr>
                `);
            }
        })
    }

    function searchByCompany() {
        let search_company = $('#search_company').val();
        let $target = $('#list');
        $.ajax({
            type: 'POST',
            url: '/car/api/filter',
            dataType: 'json',
            data: {
                "search_company": search_company
            },
            success: function (list) {
                console.log('success');
                console.log(list);

                $target.empty();

                // 배열에 담겨 들어온 list를 .each를 활용하여 반복해서 출력한다.
                $.each(list, (i, item) => {
                    $target.append(`
                <tr>
                    <td>${i+1}</td>
                    <td>${item.carNumber}</td>
                    <td>${item.owner}</td>
                    <td>${item.model}</td>
                    <td>${item.company}</td>
                    <td>${item.numOfAccident}</td>
                    <td>${item.numOfOwnerChange}</td>
                    <td><span class="delCar">x</span></td>
                </tr>
                `)
                })
            }
        })

    }
</script> -->


<script>
    function search() {
        let selectVal = $('#selectBox').val()
        let inputText = $('#input_search_text').val()

        if (selectVal == 'carNumber') {
            console.log(selectVal, inputText)
            // 변수앞에 $를 붙이는 것은 이 변수가 jQuery 변수라는 것을 알려주는 것(관습상)
            let $target = $('#list');
            $.ajax({
                type: 'POST',
                url: '/car/api/search',
                dataType: 'json',
                // search_carNumber 데이터를 json 형식으로 /api/search에 보낸다.
                data: {
                    "inputText": inputText
                },
                success: function (item) {
                    console.log('success');
                    console.log(item); // 성공 하였으면 데이터가 item에 들어오는지 확인한다.

                    // item 데이터가 잘 들어오면 $target에 추가하기
                    // $target값을 모두 날린다.
                    $target.empty();

                    // 새로 붙여 넣는다.
                    $target.append(`
                <tr>
                    <td>1</td>
                    <td>${item.carNumber}</td>
                    <td>${item.owner}</td>
                    <td>${item.model}</td>
                    <td>${item.company}</td>
                    <td>${item.numOfAccident}</td>
                    <td>${item.numOfOwnerChange}</td>
                    <td><span class="delCar">x</span></td>
                </tr>
                `);
                }
            })
        } else {
            console.log(selectVal, inputText);
            let $target = $('#list');
            $.ajax({
                type: 'POST',
                url: '/car/api/filter',
                dataType: 'json',
                data: {
                    "inputText": inputText,
                    "selectVal": selectVal
                },
                success: function (list) {
                    console.log('success');
                    console.log(list);

                    $target.empty();

                    // 배열에 담겨 들어온 list를 .each를 활용하여 반복해서 출력한다.
                    $.each(list, (i, item) => {
                        $target.append(`
                <tr>
                    <td>${i+1}</td>
                    <td>${item.carNumber}</td>
                    <td>${item.owner}</td>
                    <td>${item.model}</td>
                    <td>${item.company}</td>
                    <td>${item.numOfAccident}</td>
                    <td>${item.numOfOwnerChange}</td>
                    <td><span class="delCar">x</span></td>
                </tr>
                `)
                    })
                }
            })
        }
    }
</script>